{"version":3,"sources":["components/ContactList/list.module.css","components/Filter/filter.module.css","styles/title.module.css","components/Lists/filter.module.css","redux/actionTypes.js","redux/contacts/contactActions.js","components/ContactForm/ContactForm.js","components/Filter/Filter.js","components/Lists/Lists.js","components/ContactList/ContactList.js","App.js","redux/reducers/contactsReducers.js","redux/store.js","index.js","components/ContactForm/styleContactForm.module.css"],"names":["module","exports","FILTER","addContact","createAction","name","number","payload","contact","id","uuidv4","removeContact","changeFilter","ContactForm","state","handleChange","e","target","value","setState","preventSubmit","preventDefault","CSSTransition","in","appear","classNames","styled","timeout","unmountOnExit","className","form","onSubmit","this","label","inputName","type","onChange","inputNumber","submit","onClick","props","clickEvent","Component","mapDispatchToProps","contactActions","connect","onChangeFilter","contactsActions","contacts","filter","styles","filterInput","ownProps","item","items","find","dispatch","click","key","list","delete","hclick","filteredArr","toLowerCase","includes","TransitionGroup","component","contactList","map","App","title","filtercss","itemsTestReducer","createReducer","action","combineReducers","rootReducer","contactsReducer","store","configureStore","reducer","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.bb41f7a9.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"contactList\":\"list_contactList__2Otwk\",\"list\":\"list_list___M4xL\",\"delete\":\"list_delete__1fX2M\",\"enter\":\"list_enter__2oe0J\",\"enterActive\":\"list_enterActive__PKinY\",\"exit\":\"list_exit__2r5Ur\",\"exitActive\":\"list_exitActive__XI4VB\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"filter_form__27_H4\",\"label\":\"filter_label__3a7qb\",\"filterInput\":\"filter_filterInput__2nlSe\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"title\":\"title_title__2RWeX\",\"appear\":\"title_appear__1_hAs\",\"appearActive\":\"title_appearActive__1HbZi\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"enter\":\"filter_enter__efMDE\",\"enterActive\":\"filter_enterActive__3wDqX\",\"exit\":\"filter_exit__3RoV1\",\"exitActive\":\"filter_exitActive__2Ua1e\"};","export const ADD_CONTACT = 'contacts/add'\r\nexport const REMOVE_CONTACT = 'contacts/reove'\r\nexport const FILTER = 'contacts/changeFilter'\r\n\r\n","import { v4 as uuidv4 } from 'uuid';\r\nimport { ADD_CONTACT, REMOVE_CONTACT, FILTER } from '../actionTypes';\r\nimport { createAction } from '@reduxjs/toolkit';\r\n\r\nconst addContact = createAction(ADD_CONTACT, (name, number) => ({\r\n\tpayload: { contact: { id: uuidv4(), name: name, number: number } }\r\n}));\r\n\r\nconst removeContact = createAction(REMOVE_CONTACT);\r\n\r\nconst changeFilter = createAction(FILTER);\r\n\r\nexport default {\r\n\taddContact,\r\n\tremoveContact,\r\n\tchangeFilter\r\n};\r\n","import React, { Component } from 'react';\r\nimport styled from './styleContactForm.module.css';\r\nimport { CSSTransition } from 'react-transition-group';\r\nimport { connect } from 'react-redux';\r\nimport contactActions from '../../redux/contacts/contactActions';\r\n\r\nclass ContactForm extends Component {\r\n\tstate = {\r\n\t\tname: '',\r\n\t\tnumber: ''\r\n\t};\r\n\r\n\thandleChange = (e) => {\r\n\t\tconst { name, value } = e.target;\r\n\t\tthis.setState({\r\n\t\t\t[name]: value\r\n\t\t});\r\n\t};\r\n\r\n\tpreventSubmit = (e) => {\r\n\t\te.preventDefault();\r\n\t};\r\n\r\n\trender() {\r\n\t\treturn (\r\n\t\t\t<CSSTransition in={true} appear={true} classNames={styled} timeout={700} unmountOnExit>\r\n\t\t\t\t<form className={styled.form} onSubmit={this.preventSubmit}>\r\n\t\t\t\t\t<label className={styled.label}>\r\n\t\t\t\t\t\tName\r\n\t\t\t\t\t\t<br />\r\n\t\t\t\t\t\t<input className={styled.inputName} name=\"name\" type=\"text\" onChange={this.handleChange} />\r\n\t\t\t\t\t</label>\r\n\t\t\t\t\t<label className={styled.label}>\r\n\t\t\t\t\t\tNumber\r\n\t\t\t\t\t\t<br />\r\n\t\t\t\t\t\t<input className={styled.inputNumber} name=\"number\" type=\"text\" onChange={this.handleChange} />\r\n\t\t\t\t\t</label>\r\n\t\t\t\t\t<button\r\n\t\t\t\t\t\tclassName={styled.submit}\r\n\t\t\t\t\t\tname=\"name\"\r\n\t\t\t\t\t\tonClick={() => this.props.clickEvent(this.state.name, this.state.number)}\r\n\t\t\t\t\t\ttype=\"submit\"\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\tAdd to contacts\r\n\t\t\t\t\t</button>\r\n\t\t\t\t</form>\r\n\t\t\t</CSSTransition>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nconst mapDispatchToProps = {\r\n\tclickEvent: contactActions.addContact\r\n};\r\n\r\nexport default connect(null, mapDispatchToProps)(ContactForm);\r\n","import React from 'react';\r\nimport styles from './filter.module.css';\r\nimport { connect } from 'react-redux';\r\nimport contactsActions from '../../redux/contacts/contactActions';\r\n\r\nfunction Filter({ value, onChangeFilter }) {\r\n\treturn (\r\n\t\t<form className={styles.form}>\r\n\t\t\t<label className={styles.label}>\r\n\t\t\t\tFind contacts by name\r\n\t\t\t\t<br />\r\n\t\t\t\t<input\r\n\t\t\t\t\tclassName={styles.filterInput}\r\n\t\t\t\t\ttype=\"text\"\r\n\t\t\t\t\tvalue={value}\r\n\t\t\t\t\tonChange={(e) => onChangeFilter(e.target.value)}\r\n\t\t\t\t/>\r\n\t\t\t</label>\r\n\t\t</form>\r\n\t);\r\n}\r\n\r\nconst mapDispatchToProps = {\r\n\tonChangeFilter: contactsActions.changeFilter\r\n};\r\nconst mapStateToProps = (state) => ({\r\n\tvalue: state.contacts.filter\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Filter);\r\n","import React from 'react';\r\nimport styles from '../ContactList/list.module.css';\r\nimport { connect } from 'react-redux';\r\nimport contactsActions from '../../redux/contacts/contactActions';\r\n\r\nconst List = ({ id, name, number, click }) => {\r\n\treturn (\r\n\t\t<li key={id} className={styles.list}>\r\n\t\t\t{name}: {number}\r\n\t\t\t<button className={styles.delete} onClick={click} />\r\n\t\t</li>\r\n\t);\r\n};\r\n\r\nconst mapStateToProps = (state, ownProps) => {\r\n\tconst item = state.contacts.items.find((item) => item.id === ownProps.id);\r\n\treturn {\r\n\t\t...item\r\n\t};\r\n};\r\nconst mapDispatchToProps = (dispatch, ownProps) => ({\r\n\tclick: () => dispatch(contactsActions.removeContact(ownProps.id))\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(List);\r\n","import React from 'react';\r\nimport styles from './list.module.css'\r\nimport List from '../Lists/Lists'\r\nimport {TransitionGroup, CSSTransition} from 'react-transition-group';\r\nimport {connect} from 'react-redux';\r\nimport contactsActions from '../../redux/contacts/contactActions';\r\n\r\nfunction ContactList({ filteredArr }) {\r\n\treturn (\r\n\t\t<TransitionGroup component=\"ul\" className={styles.contactList}>\r\n\t\t\t{filteredArr.map((item) => {\r\n\t\t\t\treturn (\r\n\t\t\t\t\t<CSSTransition key={item.id}\r\n\t\t\t\t\ttimeout={250}\r\n\t\t\t\t\tclassNames={styles}\r\n\t\t\t\t\tunmountOnExit\r\n\t\t\t\t\t>\r\n                    <List \r\n\t\t\t\t\tid={item.id}\r\n\t\t\t\t\t/>\r\n\t\t\t\t\t</CSSTransition>\r\n\t\t\t\t\t\r\n\t\t\t\t);\r\n\t\t\t})}\r\n\t\t</TransitionGroup>\r\n\t);\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n\tfilteredArr: state.contacts.items.filter((contact) => contact.name.toLowerCase().includes(state.contacts.filter.toLowerCase()))\r\n})\r\n\r\nconst mapDispatchToProps = {\r\n\thclick: contactsActions.removeContact\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ContactList)\r\n","import React, { Component } from 'react';\r\nimport ContactForm from './components/ContactForm/ContactForm';\r\nimport Filter from './components/Filter/Filter';\r\nimport ContactList from './components/ContactList/ContactList';\r\nimport styles from './styles/title.module.css';\r\nimport filtercss from './components/Lists/filter.module.css';\r\n// import Notification from './components/notification/notification';\r\n// import notify from './styles/notify.module.css';\r\nimport { CSSTransition } from 'react-transition-group';\r\n\r\nclass App extends Component {\r\n\t// state = {\r\n\t// \tnotification: false,\r\n\t// \temptyField: false\r\n\t// };\r\n\r\n\t// componentDidMount() {\r\n\t// \tconst localStorContacts = localStorage.getItem('contacts');\r\n\r\n\t// \tif (localStorContacts) {\r\n\t// \t\tthis.setState({\r\n\t// \t\t\tcontacts: JSON.parse(localStorContacts)\r\n\t// \t\t});\r\n\t// \t}\r\n\t// }\r\n\r\n\t// componentDidUpdate(prevProps, prevState) {\r\n\t// \tif (prevState !== this.state.contacts) {\r\n\t// \t\tlocalStorage.setItem('contacts', JSON.stringify(this.state.contacts));\r\n\t// \t}\r\n\t// }\r\n\r\n\t// notifyShow = () => {\r\n\t// \tthis.setState({\r\n\t// \t\tnotification: true\r\n\t// \t});\r\n\t// \tsetTimeout(\r\n\t// \t\t() =>\r\n\t// \t\t\tthis.setState({\r\n\t// \t\t\t\tnotification: false\r\n\t// \t\t\t}),\r\n\t// \t\t1500\r\n\t// \t);\r\n\t// };\r\n\r\n\t// fieldShow = () => {\r\n\t// \tthis.setState({\r\n\t// \t\temptyField: true\r\n\t// \t});\r\n\t// \tsetTimeout(\r\n\t// \t\t() =>\r\n\t// \t\t\tthis.setState({\r\n\t// \t\t\t\temptyField: false\r\n\t// \t\t\t}),\r\n\t// \t\t1500\r\n\t// \t);\r\n\t// };\r\n\r\n\trender() {\r\n\t\treturn (\r\n\t\t\t<>\r\n\t\t\t\t{/* <CSSTransition in={this.state.notification === true} timeout={250} classNames={notify} unmountOnExit>\r\n\t\t\t\t\t<Notification text={'this name is already in contacts'} />\r\n\t\t\t\t</CSSTransition>\r\n\t\t\t\t<CSSTransition in={this.state.emptyField === true} timeout={250} classNames={notify} unmountOnExit>\r\n\t\t\t\t\t<Notification text={'One of the fields is not filled'} />\r\n\t\t\t\t</CSSTransition> */}\r\n\t\t\t\t<div>\r\n\t\t\t\t\t<CSSTransition in={true} classNames={styles} timeout={700} appear={true} unmountOnExit>\r\n\t\t\t\t\t\t<h2 className={styles.title}>Phonebook</h2>\r\n\t\t\t\t\t</CSSTransition>\r\n\t\t\t\t\t<ContactForm />\r\n\t\t\t\t\t<CSSTransition in={true} appear={true} classNames={filtercss} timeout={250} unmountOnExit>\r\n\t\t\t\t\t\t<Filter />\r\n\t\t\t\t\t</CSSTransition>\r\n\t\t\t\t\t<ContactList />\r\n\t\t\t\t</div>\r\n\t\t\t</>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nexport default App;\r\n","import { combineReducers } from 'redux';\r\nimport { ADD_CONTACT, REMOVE_CONTACT, FILTER } from '../actionTypes';\r\nimport { createReducer } from '@reduxjs/toolkit';\r\n\r\nconst itemsTestReducer = createReducer([], {\r\n\t[ADD_CONTACT]: (state, action) => action.payload.contact.name === '' || action.payload.contact.number === '' ? (state) : [ ...state, action.payload.contact ],\r\n\t[REMOVE_CONTACT]: (state, action) => state.filter((contact) => contact.id !== action.payload)\r\n});\r\n\r\nconst filter = createReducer('', {\r\n\t[FILTER]: (state, action) => action.payload\r\n});\r\n\r\nexport default combineReducers({\r\n\titems: itemsTestReducer,\r\n\tfilter\r\n});\r\n","import { combineReducers } from 'redux';\r\nimport contactsReducer from './reducers/contactsReducers';\r\nimport { configureStore } from '@reduxjs/toolkit';\r\n\r\nconst rootReducer = combineReducers({\r\n\tcontacts: contactsReducer\r\n});\r\n\r\nconst store = configureStore({\r\n\treducer: rootReducer\r\n});\r\n\r\nexport default store;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\nimport { Provider } from 'react-redux';\r\nimport store from './redux/store';\r\n\r\nReactDOM.render(\r\n\t<Provider store={store}>\r\n\t\t<App />\r\n\t</Provider>,\r\n\tdocument.getElementById('root')\r\n);\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"styleContactForm_form__12Yc5\",\"label\":\"styleContactForm_label__19jLq\",\"submit\":\"styleContactForm_submit__u-ahu\",\"inputName\":\"styleContactForm_inputName__2w6dU\",\"inputNumber\":\"styleContactForm_inputNumber__3feC6\",\"appear\":\"styleContactForm_appear__PnjjA\",\"appearActive\":\"styleContactForm_appearActive__2JULU\"};"],"sourceRoot":""}